import{iventory}from"./manageStore.js";import{events}from"./events.js";export default class Filters{constructor(){this.selectors(),this.eventListeners()}selectors(){this.products=iventory.getData(),this.priceOrder=document.querySelectorAll(".select option"),this.colorGroup=document.querySelectorAll("#colorFilter label input[type='checkbox']"),this.colorClicked={},this.sizeGroup=document.querySelectorAll("#sizeFilter label input[type='checkbox']"),this.sizeClicked={},this.priceGroup=document.querySelectorAll("#priceFilter label input[type='radio']"),this.priceCliked={},this.filterOn={}}eventListeners(){for(let t of this.colorGroup)t.addEventListener("change",this.filterColor.bind(this)),t.addEventListener("click",this.colorOut.bind(this));for(let t of this.sizeGroup)t.addEventListener("change",this.filterSize.bind(this)),t.addEventListener("click",this.sizeOut.bind(this));for(let t of this.priceOrder)t.addEventListener("click",this.comboselect.bind(this));for(let t of this.priceGroup)t.addEventListener("change",this.filterprice.bind(this)),t.addEventListener("change",this.priceOut.bind(this))}comboselect(t){let e=[],i=[],r=[];return"date"==t.target.checked.value?(e=this.products.map(date.reverse()),iventory.setData(this.products)):"pricemin"==t.target.value?(i=this.products.sort((function(t,e){return t-e})),iventory.setData(this.pricemin)):"pricemax"==t.target.value?(r=iventory.data[price].map(product.price.sort((function(t,e){return e-t}))),iventory.setData(this.products)):iventory.backToInitialData(),!0}filterColor(t){this.filterOn[t.target.name]?(this.products=iventory.backToInitialData(),this.products=this.products.filter(e=>e.color.includes(t.target.value)),iventory.setData(this.products)):(this.products=this.products.filter(e=>e.color.includes(t.target.value)),iventory.setData(this.products),this.filterOn={[t.target.name]:!1})}colorOut(t){this.colorClicked[t.target.name]?(this.products=iventory.backToInitialData(),iventory.setData(this.products)):this.colorClicked={[event.target.value]:!1}}filterSize(t){this.filterOn[t.target.name]?(this.products=iventory.backToInitialData(),this.products=this.products.filter(e=>e.sizes.includes(t.target.value)),iventory.setData(this.products)):(this.products=this.products.filter(e=>e.sizes.includes(t.target.value)),iventory.setData(this.products),this.filterOn={[t.target.name]:!0})}sizeOut(t){this.sizeClicked[t.target.name]?(this.products=iventory.backToInitialData(),iventory.setData(this.products),this.sizeClicked={[event.target.value]:!0}):this.colorClicked={[event.target.value]:!1}}filterprice(t){let e=[],i=document.querySelectorAll("#priceFilter label input[type='radio']");for(let t=0;t<i.length;t++)switch(i[t].value){case"0-50":e.push(0,50),e.length>0&&(this.products=this.products.filter(t=>{for(let i=0;i<e.length-1;i+=1)if(t.price>=e[i]&&t.price<=e[i+1])return!0;this.products.pull(this.products.includes(e)),iventory.setData(this.products)}));break;case"51-150":e.push(51,150);break;case"151-300":e.push(151,300);break;case"301-500":e.push(301,500);break;case"1":e.push(500,999);break;default:e=[]}iventory.setData(e)}priceOut(t){this.priceClicked[t.target.name]?(this.products=iventory.backToInitialData(),iventory.setData(this.products),this.priceClicked={[event.target.name]:!0}):this.priceClicked={[event.target.name]:!1}}}